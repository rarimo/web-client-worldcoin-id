/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WorldIDIdentityManagerImplV2,
  WorldIDIdentityManagerImplV2Interface,
} from "../WorldIDIdentityManagerImplV2";

const _abi = [
  {
    inputs: [],
    name: "CannotRenounceOwnership",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpiredRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "ImplementationNotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "InvalidCommitment",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDeletionIndices",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateBridgeAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVerifier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVerifierLUT",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchedInputLengths",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentRoot",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "providedRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRoot",
        type: "uint256",
      },
    ],
    name: "NotLatestRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofValidationFailure",
    type: "error",
  },
  {
    inputs: [],
    name: "StateBridgeAlreadyDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "StateBridgeAlreadyEnabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum WorldIDIdentityManagerImplV1.UnreducedElementType",
        name: "elementType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "UnreducedElement",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
    ],
    name: "UnsupportedTreeDepth",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum WorldIDIdentityManagerImplV1.Dependency",
        name: "kind",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "DependencyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "IdentityOperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "oldExpiryTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newExpiryTime",
        type: "uint256",
      },
    ],
    name: "RootHistoryExpirySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnabled",
        type: "bool",
      },
    ],
    name: "StateBridgeStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "preRoot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum WorldIDIdentityManagerImplV1.TreeChange",
        name: "kind",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "postRoot",
        type: "uint256",
      },
    ],
    name: "TreeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_treeDepth",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialRoot",
        type: "uint256",
      },
    ],
    name: "WorldIDIdentityManagerImplInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "WorldIDIdentityManagerImplV2Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "NO_SUCH_ROOT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "root",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "supersededTimestamp",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct WorldIDIdentityManagerImplV1.RootInfo",
        name: "rootInfo",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "packedDeletionIndices",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "preRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postRoot",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "batchSize",
        type: "uint32",
      },
    ],
    name: "calculateIdentityDeletionInputHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "startIndex",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "preRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postRoot",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "identityCommitments",
        type: "uint256[]",
      },
    ],
    name: "calculateIdentityRegistrationInputHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "deletionProof",
        type: "uint256[8]",
      },
      {
        internalType: "bytes",
        name: "packedDeletionIndices",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "preRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postRoot",
        type: "uint256",
      },
    ],
    name: "deleteIdentities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeleteIdentitiesVerifierLookupTableAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegisterIdentitiesVerifierLookupTableAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRootHistoryExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSemaphoreVerifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreeDepth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identityOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_treeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialRoot",
        type: "uint256",
      },
      {
        internalType: "contract VerifierLookupTable",
        name: "_batchInsertionVerifiers",
        type: "address",
      },
      {
        internalType: "contract VerifierLookupTable",
        name: "_batchUpdateVerifiers",
        type: "address",
      },
      {
        internalType: "contract ISemaphoreVerifier",
        name: "_semaphoreVerifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract VerifierLookupTable",
        name: "_batchDeletionVerifiers",
        type: "address",
      },
    ],
    name: "initializeV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "queryRoot",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "root",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "supersededTimestamp",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct WorldIDIdentityManagerImplV1.RootInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "insertionProof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "preRoot",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "startIndex",
        type: "uint32",
      },
      {
        internalType: "uint256[]",
        name: "identityCommitments",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "postRoot",
        type: "uint256",
      },
    ],
    name: "registerIdentities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "requireValidRoot",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract VerifierLookupTable",
        name: "newTable",
        type: "address",
      },
    ],
    name: "setDeleteIdentitiesVerifierLookupTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newIdentityOperator",
        type: "address",
      },
    ],
    name: "setIdentityOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract VerifierLookupTable",
        name: "newTable",
        type: "address",
      },
    ],
    name: "setRegisterIdentitiesVerifierLookupTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newExpiryTime",
        type: "uint256",
      },
    ],
    name: "setRootHistoryExpiry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISemaphoreVerifier",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "setSemaphoreVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "signalHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "externalNullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e8565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e6576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161328e62000238600039600081816105ad015281816105f6015281816106fb0152818161073b01528181610b0001528181610b4001528181610c1e01528181610c5e01528181610d0a01528181610d4a01528181610e5401528181610e9401528181611119015281816111590152818161120b0152818161124b015281816113a1015281816113e10152818161146c015281816114ac0152818161152801528181611672015281816116b201528181611775015281816117b50152818161184c0152818161188c015281816119220152818161196201528181611a4201528181611a8201528181611b5e01528181611b9e01528181611cb501528181611cf501528181611d8001528181611dc00152818161206d015281816120ad015281816121430152818161218301528181612217015281816122570152818161243d015261247d015261328e6000f3fe6080604052600436106101cd5760003560e01c806379ba5097116100f7578063c70aa72711610095578063f134b6ca11610064578063f134b6ca14610539578063f2038f951461054e578063f2358e1d14610563578063f2fde38b1461058357600080fd5b8063c70aa727146104c6578063d7b0fef1146104e6578063e30c3978146104fb578063ea10fbbe1461051957600080fd5b80638e5cdd50116100d15780638e5cdd501461044a5780638fc22e9f14610471578063a7bba58214610486578063aa4a729e146104a657600080fd5b806379ba5097146103f75780638c76a9091461040c5780638da5cb5b1461042c57600080fd5b806338c870651161016f5780634f1ef2861161013e5780634f1ef2861461037657806352d1902d14610389578063561f204b1461039e578063715018a6146103e257600080fd5b806338c87065146102c75780633e8919b6146102e75780633f7c178d1461031457806343f974cb1461036157600080fd5b80632f059fca116101ab5780632f059fca1461023457806331e4e99214610254578063354ca120146102875780633659cfe6146102a757600080fd5b80630e3a12f3146101d25780632217b211146101f457806329b6eca914610214575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612a3a565b6105a3565b005b34801561020057600080fd5b506101f261020f366004612ac9565b6106f1565b34801561022057600080fd5b506101f261022f366004612a3a565b6109f3565b34801561024057600080fd5b506101f261024f366004612a3a565b610af6565b34801561026057600080fd5b5061027461026f366004612b88565b610c12565b6040519081526020015b60405180910390f35b34801561029357600080fd5b506101f26102a2366004612bef565b610d00565b3480156102b357600080fd5b506101f26102c2366004612a3a565b610e4a565b3480156102d357600080fd5b506101f26102e2366004612c2e565b610f12565b3480156102f357600080fd5b506102fc61110d565b6040516001600160a01b03909116815260200161027e565b34801561032057600080fd5b5061033461032f366004612c9c565b6111e4565b60408051825181526020808401516001600160801b0316908201529181015115159082015260600161027e565b34801561036d57600080fd5b50610274611395565b6101f2610384366004612cf8565b611462565b34801561039557600080fd5b5061027461151b565b3480156103aa57600080fd5b506040805160608082018352600080835260208084018290529284018190528351918201845280825291810182905291820152610334565b3480156103ee57600080fd5b506101f26115ce565b34801561040357600080fd5b506101f26115ef565b34801561041857600080fd5b50610274610427366004612da4565b611666565b34801561043857600080fd5b506033546001600160a01b03166102fc565b34801561045657600080fd5b5061045f611769565b60405160ff909116815260200161027e565b34801561047d57600080fd5b506102fc611840565b34801561049257600080fd5b506102fc6104a1366004612a3a565b611916565b3480156104b257600080fd5b506101f26104c1366004612a3a565b611a38565b3480156104d257600080fd5b506101f26104e1366004612c9c565b611b54565b3480156104f257600080fd5b50610274611ca9565b34801561050757600080fd5b506065546001600160a01b03166102fc565b34801561052557600080fd5b506101f2610534366004612e0c565b611d76565b34801561054557600080fd5b506102fc612061565b34801561055a57600080fd5b506102fc612137565b34801561056f57600080fd5b506101f261057e366004612c9c565b61220d565b34801561058f57600080fd5b506101f261059e366004612a3a565b61234a565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f45760405162461bcd60e51b81526004016105eb90612e76565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106266123bb565b6001600160a01b03161461064c5760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff1661066f57604051630103019560e11b815260040160405180910390fd5b6106776123d7565b6001600160a01b03811661069e5760405163baa3de5f60e01b815260040160405180910390fd5b61013380546001600160a01b038381166001600160a01b03198316811790935516908160035b6040517fd194b8423e9cb3c7cbebbbc3fe7f79dc2cbe0b40e03270d975abff491504c7b190600090a45050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107395760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661076b6123bb565b6001600160a01b0316146107915760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff166107b457604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b031633146107e25760405163472511eb60e11b81523360048201526024016105eb565b61012e5485146108145761012e5460405163542fced960e11b81526105eb918791600401918252602082015260400190565b60006108238587848787611666565b905060006108517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612f24565b61013154604051638a283fc360e01b8152600481018790529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190612f38565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991610901918d9190600401612f55565b600060405180830381600087803b15801561091b57600080fd5b505af192505050801561092c575060015b61098c57610938612f90565b806308c379a003610971575061094c612fab565b806109575750610973565b8060405162461bcd60e51b81526004016105eb9190613059565b505b604051631e716a8b60e01b815260040160405180910390fd5b61012e849055600088815261012f6020526040812080546001600160801b031916426001600160801b031617905584906040518a907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a45b505050505050505050565b600054600290610100900460ff16158015610a15575060005460ff8083169116105b610a315760405162461bcd60e51b81526004016105eb9061308c565b6000805461ffff191660ff8316176101001790556001600160a01b038216610a6c57604051634fdab25360e01b815260040160405180910390fd5b61013580546001600160a01b0319166001600160a01b0384161790556040517fe416bec7423c88399c6c76ff0386950a64e454d25b846ef46c397bf835c7df7a90600090a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b3e5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b706123bb565b6001600160a01b031614610b965760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16610bb957604051630103019560e11b815260040160405180910390fd5b610bc16123d7565b6001600160a01b038116610be857604051634fdab25360e01b815260040160405180910390fd5b61013180546001600160a01b038381166001600160a01b03198316811790935516908160016106c4565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c5c5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c8e6123bb565b6001600160a01b031614610cb45760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16610cd757604051630103019560e11b815260040160405180910390fd5b604051600483028088833781810195865260209095019390935250506040909101902092915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610d485760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d7a6123bb565b6001600160a01b031614610da05760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16610dc357604051630103019560e11b815260040160405180910390fd5b610dcc8561220d565b610133546040805160808101825287815260208101869052808201879052606081018590529051632357251160e01b81526001600160a01b0390921691632357251191610e1e918591906004016130da565b60006040518083038186803b158015610e3657600080fd5b505afa1580156109e8573d6000803e3d6000fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e925760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ec46123bb565b6001600160a01b031614610eea5760405162461bcd60e51b81526004016105eb90612ec2565b610ef381612433565b60408051600080825260208201909252610f0f918391906124db565b50565b600054600190610100900460ff16158015610f34575060005460ff8083169116105b610f505760405162461bcd60e51b81526004016105eb9061308c565b6000805461ffff191660ff8316176101001790556001600160a01b038416610f8b57604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038316610fb257604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038216610fd95760405163baa3de5f60e01b815260040160405180910390fd5b610fe161264b565b610fea8661267a565b61100c57604051630220cee360e61b815260ff871660048201526024016105eb565b610134805460ff60a81b1916600160a81b60ff891602179055610e106101305561012e85905561013180546001600160a01b03199081166001600160a01b0387811691909117909255610132805482168684161790556101338054821685841617905560335461012d80549190931691161790556110886126a1565b6040805160ff88168152602081018790527fd1bcc66c061c32a21f569d138c2dadef4a38a0636309881954af5f44010ec1d8910160405180910390a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111575760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166111896123bb565b6001600160a01b0316146111af5760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff166111d257604051630103019560e11b815260040160405180910390fd5b50610135546001600160a01b03165b90565b60408051606081018252600080825260208201819052918101919091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036112495760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661127b6123bb565b6001600160a01b0316146112a15760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff166112c457604051630103019560e11b815260040160405180910390fd5b61012e5482036112f35750506040805160608101825261012e5481526000602082015260019181019190915290565b600082815261012f60205260408120546001600160801b03169081900361134e5760408051606080820183526000808352602080840182905292840181905283519182018452808252918101829052918201525b9392505050565b610130546000906113686001600160801b0384164261310b565b604080516060810182528781526001600160801b039095166020860152911015908301525090505b919050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113df5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114116123bb565b6001600160a01b0316146114375760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff1661145a57604051630103019560e11b815260040160405180910390fd5b506101305490565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114aa5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114dc6123bb565b6001600160a01b0316146115025760405162461bcd60e51b81526004016105eb90612ec2565b61150b82612433565b611517828260016124db565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115bb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105eb565b5060008051602061321283398151915290565b6115d66123d7565b6040516377aeb0ad60e01b815260040160405180910390fd5b60655433906001600160a01b0316811461165d5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016105eb565b610f0f816126d7565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036116b05760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166116e26123bb565b6001600160a01b0316146117085760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff1661172b57604051630103019560e11b815260040160405180910390fd5b6000868686868660405160200161174695949392919061312c565b60408051601f198184030181529190528051602090910120979650505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117b35760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166117e56123bb565b6001600160a01b03161461180b5760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff1661182e57604051630103019560e11b815260040160405180910390fd5b5061013454600160a81b900460ff1690565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361188a5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166118bc6123bb565b6001600160a01b0316146118e25760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff1661190557604051630103019560e11b815260040160405180910390fd5b50610131546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036119605760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119926123bb565b6001600160a01b0316146119b85760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff166119db57604051630103019560e11b815260040160405180910390fd5b6119e36123d7565b61012d80546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f5a674c516c196404869e5f502b5634ce442416bb016dde54b5de4c812cc019e690600090a392915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a805760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611ab26123bb565b6001600160a01b031614611ad85760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16611afb57604051630103019560e11b815260040160405180910390fd5b611b036123d7565b6001600160a01b038116611b2a57604051634fdab25360e01b815260040160405180910390fd5b61013580546001600160a01b038381166001600160a01b03198316811790935516908160026106c4565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611b9c5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bce6123bb565b6001600160a01b031614611bf45760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16611c1757604051630103019560e11b815260040160405180910390fd5b611c1f6123d7565b80600003611c6f5760405162461bcd60e51b815260206004820152601b60248201527f4578706972792074696d652063616e6e6f74206265207a65726f2e000000000060448201526064016105eb565b610130805490829055604051829082907ff62a6f06fde00a303cd5939e6b53762854412c96a196cda26720cedd28af9e7090600090a35050565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611cf35760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d256123bb565b6001600160a01b031614611d4b5760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16611d6e57604051630103019560e11b815260040160405180910390fd5b5061012e5490565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611dbe5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611df06123bb565b6001600160a01b031614611e165760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff16611e3957604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b03163314611e675760405163472511eb60e11b81523360048201526024016105eb565b611e72600484612f24565b15611e90576040516308f3ed5160e41b815260040160405180910390fd5b6000611e9d60048561317d565b905061012e548314611ed15761012e5460405163542fced960e11b81526105eb918591600401918252602082015260400190565b6000611ee08686868686610c12565b90506000611f0e7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612f24565b61013554604051638a283fc360e01b815263ffffffff861660048201529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f879190612f38565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991611fc3918d9190600401612f55565b600060405180830381600087803b158015611fdd57600080fd5b505af1925050508015611fee575060015b611ffa57610938612f90565b61012e859055600086815261012f6020526040902080546001600160801b031916426001600160801b031617905584600160405188907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a4505050505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036120ab5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166120dd6123bb565b6001600160a01b0316146121035760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff1661212657604051630103019560e11b815260040160405180910390fd5b5061012d546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036121815760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166121b36123bb565b6001600160a01b0316146121d95760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff166121fc57604051630103019560e11b815260040160405180910390fd5b50610133546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036122555760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166122876123bb565b6001600160a01b0316146122ad5760405162461bcd60e51b81526004016105eb90612ec2565b60fb5460ff166122d057604051630103019560e11b815260040160405180910390fd5b61012e548114610f0f57600081815261012f60205260408120546001600160801b0316908190036123145760405163ddae3b7160e01b815260040160405180910390fd5b6101305461232b6001600160801b0383164261310b565b111561151757604051631d739acf60e11b815260040160405180910390fd5b6123526123d7565b606580546001600160a01b0383166001600160a01b031990911681179091556123836033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080516020613212833981519152546001600160a01b031690565b6033546001600160a01b031633146124315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105eb565b565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361247b5760405162461bcd60e51b81526004016105eb90612e76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166124ad6123bb565b6001600160a01b0316146124d35760405162461bcd60e51b81526004016105eb90612ec2565b610f0f6123d7565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156125135761250e836126f0565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561256d575060408051601f3d908101601f1916820190925261256a91810190613191565b60015b6125d05760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105eb565b600080516020613212833981519152811461263f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105eb565b5061250e83838361278c565b600054610100900460ff166126725760405162461bcd60e51b81526004016105eb906131aa565b6124316127b7565b60006010602060ff8416821180159061269957508060ff168460ff1611155b949350505050565b600054610100900460ff166126c85760405162461bcd60e51b81526004016105eb906131aa565b60fb805460ff19166001179055565b606580546001600160a01b0319169055610f0f816127ee565b6001600160a01b0381163b61275d5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105eb565b60008051602061321283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61279583612840565b6000825111806127a25750805b1561250e576127b18383612880565b50505050565b600054610100900460ff166127de5760405162461bcd60e51b81526004016105eb906131aa565b6127e6612976565b6124316129a5565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612849816126f0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6128e85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105eb565b600080846001600160a01b03168460405161290391906131f5565b600060405180830381855af49150503d806000811461293e576040519150601f19603f3d011682016040523d82523d6000602084013e612943565b606091505b509150915061296b8282604051806060016040528060278152602001613232602791396129cc565b925050505b92915050565b600054610100900460ff1661299d5760405162461bcd60e51b81526004016105eb906131aa565b6124316129e5565b600054610100900460ff166124315760405162461bcd60e51b81526004016105eb906131aa565b606083156129db575081611347565b6113478383612a15565b600054610100900460ff16612a0c5760405162461bcd60e51b81526004016105eb906131aa565b612431336126d7565b8151156109575781518083602001fd5b6001600160a01b0381168114610f0f57600080fd5b600060208284031215612a4c57600080fd5b813561134781612a25565b80610100810183101561297057600080fd5b803563ffffffff8116811461139057600080fd5b60008083601f840112612a8f57600080fd5b50813567ffffffffffffffff811115612aa757600080fd5b6020830191508360208260051b8501011115612ac257600080fd5b9250929050565b6000806000806000806101808789031215612ae357600080fd5b612aed8888612a57565b95506101008701359450612b046101208801612a69565b935061014087013567ffffffffffffffff811115612b2157600080fd5b612b2d89828a01612a7d565b979a969950949794969561016090950135949350505050565b60008083601f840112612b5857600080fd5b50813567ffffffffffffffff811115612b7057600080fd5b602083019150836020828501011115612ac257600080fd5b600080600080600060808688031215612ba057600080fd5b853567ffffffffffffffff811115612bb757600080fd5b612bc388828901612b46565b9096509450506020860135925060408601359150612be360608701612a69565b90509295509295909350565b60008060008060006101808688031215612c0857600080fd5b85359450602086013593506040860135925060608601359150612be38760808801612a57565b600080600080600060a08688031215612c4657600080fd5b853560ff81168114612c5757600080fd5b9450602086013593506040860135612c6e81612a25565b92506060860135612c7e81612a25565b91506080860135612c8e81612a25565b809150509295509295909350565b600060208284031215612cae57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612cf157612cf1612cb5565b6040525050565b60008060408385031215612d0b57600080fd5b8235612d1681612a25565b915060208381013567ffffffffffffffff80821115612d3457600080fd5b818601915086601f830112612d4857600080fd5b813581811115612d5a57612d5a612cb5565b6040519150612d72601f8201601f1916850183612ccb565b8082528784828501011115612d8657600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600080600060808688031215612dbc57600080fd5b612dc586612a69565b94506020860135935060408601359250606086013567ffffffffffffffff811115612def57600080fd5b612dfb88828901612a7d565b969995985093965092949392505050565b60008060008060006101608688031215612e2557600080fd5b612e2f8787612a57565b945061010086013567ffffffffffffffff811115612e4c57600080fd5b612e5888828901612b46565b96999098509596610120810135966101409091013595509350505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082612f3357612f33612f0e565b500690565b600060208284031215612f4a57600080fd5b815161134781612a25565b61012081016101008085843782018360005b6001811015612f86578151835260209283019290910190600101612f67565b5050509392505050565b600060033d11156111e15760046000803e5060005160e01c90565b600060443d1015612fb95790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612fe957505050505090565b82850191508151818111156130015750505050505090565b843d870101602082850101111561301b5750505050505090565b61302a60208286010187612ccb565b509095945050505050565b60005b83811015613050578181015183820152602001613038565b50506000910152565b6020815260008251806020840152613078816040850160208701613035565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b61018081016101008085843782018360005b6004811015612f865781518352602092830192909101906001016130ec565b8181038181111561297057634e487b7160e01b600052601160045260246000fd5b60e086901b6001600160e01b0319168152600481018590526024810184905260006001600160fb1b0383111561316157600080fd5b8260051b80856044850137919091016044019695505050505050565b60008261318c5761318c612f0e565b500490565b6000602082840312156131a357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251613207818460208701613035565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122045f3409e9e11024eb02a657a4174c22e71e9c39e7c93448be310b7d93cd5358264736f6c63430008150033";

type WorldIDIdentityManagerImplV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldIDIdentityManagerImplV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldIDIdentityManagerImplV2__factory extends ContractFactory {
  constructor(...args: WorldIDIdentityManagerImplV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<WorldIDIdentityManagerImplV2> {
    return super.deploy(
      overrides || {}
    ) as Promise<WorldIDIdentityManagerImplV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WorldIDIdentityManagerImplV2 {
    return super.attach(address) as WorldIDIdentityManagerImplV2;
  }
  override connect(signer: Signer): WorldIDIdentityManagerImplV2__factory {
    return super.connect(signer) as WorldIDIdentityManagerImplV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldIDIdentityManagerImplV2Interface {
    return new utils.Interface(_abi) as WorldIDIdentityManagerImplV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldIDIdentityManagerImplV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WorldIDIdentityManagerImplV2;
  }
}
